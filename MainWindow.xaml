<Window
    x:Class="Fiatsoft.Alert.Grid.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d"
    Width="410" 
    Height="180" 
    MinWidth="315" 
    MinHeight="140"
    Closing="Window_Closing" 
    Icon="pack://application:,,,/Fiatsoft.Alert.Grid;component/Fiatsoft.Company.Temporary.Branding.Logo.Icon.ico"
    xmlns:diag="clr-namespace:System.Diagnostics;assembly=WindowsBase" 
    xmlns:local="clr-namespace:Fiatsoft.Alert.Grid"
    xmlns:controls="clr-namespace:Fiatsoft.Alert.Grid.Controls"
    KeyDown="Window_KeyDown"
>
    <Window.Background>
        <SolidColorBrush Color="{DynamicResource {x:Static SystemColors.ControlColorKey}}"/>
    </Window.Background>
    <Grid Margin="3,3,3,6">
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"></RowDefinition>
            <RowDefinition Height="*"></RowDefinition>
            <RowDefinition Height="auto"></RowDefinition>
        </Grid.RowDefinitions>
        <TextBlock Grid.Row="0" Text="{Binding TopicName}" d:Text="support@fiatsoft.com"  Margin="3,6,0,6" FontSize="10.5" FontFamily="Verdana" FontWeight="Bold"></TextBlock>

        <DataGrid 
            x:Name="AlertDataGrid" 
            ItemsSource="{Binding ViewSource.View}" 
            Grid.Row="1" 
            Margin="3,3,3,0" 
            FontSize="12" 
            AutoGenerateColumns="False" 
            CanUserSortColumns="True" 
            GridLinesVisibility="None" 
            IsReadOnly="True" 
            SelectionUnit="FullRow" 
            SelectionMode="Extended" 
            IsTabStop="True"
            KeyboardNavigation.TabNavigation="None"
            MouseDoubleClick="AlertDataGridView_MouseDoubleClick" 
            SelectionChanged="AlertDataGridView_SelectionChanged">
            <DataGrid.Background>
                <SolidColorBrush Color="{DynamicResource {x:Static SystemColors.WindowColorKey}}"/>
            </DataGrid.Background>
            <DataGrid.Resources>
                <Style TargetType="DataGridRow">
                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="{x:Static SystemColors.HighlightBrush}" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.Resources>
            <DataGrid.ContextMenu>
                <ContextMenu>
                    <MenuItem x:Name="RestoreViewButton" Header="Restore View" Click="RestoreView_Click" />
                </ContextMenu>
            </DataGrid.ContextMenu>
        </DataGrid>
        
        <DockPanel Grid.Row="2" VerticalAlignment="Bottom" Margin="3,3,0,0">
            <DockPanel.Resources>
                <Style TargetType="Button">
                    <Setter Property="Width" Value="85"/>
                    <Setter Property="Height" Value="20"/>
                    <Setter Property="FontWeight" Value="Normal"/>
                    <Setter Property="FontSize" Value="11"/>
                    <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.ActiveBorderBrushKey}}"/>
                </Style>
            </DockPanel.Resources>
            <Button Name="RunDefaultButton" DockPanel.Dock="Left" Margin="0,3,3,0" Click="RunDefaultButton_Click" IsEnabled="{Binding IsRunDefaultButtonEnabled}" ToolTip="{Binding DefaultAction}">Run Default</Button>
            <StackPanel DockPanel.Dock="Right" Orientation="Horizontal" HorizontalAlignment="Right">
                <Button x:Name="RunButton" Click="RunButton_Click" IsEnabled="{Binding IsRunButtonEnabled}" Margin="0,3,3,0" ToolTip="{Binding CurrentAction}">Run</Button>
                
                <controls:SplitButton Margin="0,3,3,0">
                    <controls:SplitButton.MainButton>
                        <Button Content="Hide" Click="HideButton_Click" IsEnabled="{Binding IsItemSelected}" />
                    </controls:SplitButton.MainButton>
                    <Button Content="Copy" Click="CopyButton_Click" IsEnabled="{Binding IsItemSelected}" />
                    <Button Content="Copy Action" Click="CopyActionButton_Click" IsEnabled="{Binding IsItemSelected}" />
                    <Button Content="Copy Item" Click="CopyItemButton_Click" IsEnabled="{Binding IsItemSelected}" />
                    <Button Content="Delete" Click="DeleteButton_Click" IsEnabled="{Binding IsItemSelected}" />
                </controls:SplitButton>

            </StackPanel>
        </DockPanel>
    </Grid>
</Window>
